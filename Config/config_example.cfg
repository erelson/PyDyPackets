## config_example.py for PyDyPackets

# This file is an example configuration script for PyDyPackets.  A config file
# named config.py is required.  You can copy this file, rename it, and edit it.

################################
[bots]
# BOT PROFILES (EXTERNAL)
# Import settings from other config files

##
#  Each imported script contains the same contents as config.py.
#  Your entire config.py can simply be a set of ``1 = robotName.cfg`` lines 
#  if you so choose.
#  Note that any other config settings below this block will be replaced by 
#  imported settings.

#1 = Darwin_config.cfg
#2 = Giger_config.cfg

##########################
[serial]
# SERIAL PORT
# The serial port connected to the dynamixel bus is specified here

##Serial port identity:
#  There are various ways to define the serial port name/ID/number, and this will
#  vary from one OS to another.  
# Use one of the following definitions of ``port``:
# Linux: Two ways to specify##############
#port = 16
#port = '/dev/ttyS1'
#port = '/dev/ttyACM0'
# Windows: Two ways to specify ############
#port = "COM17" # string specification works for windows
#port = 16 # == COM17 for Windows #~ Note on Windows: use port number - 1 on windows OR:
port = "COM17"
##Baud rate of Dynamixel bus:
baud = 1000000

######################################
[default_device_type]
# DEFAULT DEVICE TYPE
#Default for non-assigned device IDs
# The options for servo types are: 
# AX-12, AX-12W, AX-18, AX-S1, RX-24, RX-28, RX-64, MX-28, MX-64, MX-106, EX-106
default_device_type : AX-12

######################################
[id_to_device_type]
# DEVICE TYPES
# IDs are matched with 

#
# The options for servo types are: 
# AX-12, AX-12W, AX-18, AX-S1, RX-24, RX-28, RX-64, MX-28, MX-64, MX-106, EX-106

#Numa
11 = AX-12
12 = AX-12
13 = AX-12
14 = AX-12
21 = AX-12
22 = AX-12
23 = AX-12
24 = AX-12
31 = AX-12
32 = AX-12
33 = AX-12
34 = AX-12
41 = AX-12
42 = AX-12
43 = AX-12
44 = AX-12
51 = AX-12
52 = AX-12
#Twitch
61 = AX-12
62 = AX-12
63 = AX-12
#TwitchMX
71 = MX-28
72 = MX-28
73 = MX-28
74 = AX-12
75 = AX-12

######################################
[limits]
# DEVICE LIMITS (SPEED AND POSITION)
# IDs are matched with 

# TODO
# The options for servo types are: 
# AX-12, AX-12W, AX-18, AX-S1, RX-24, RX-28, RX-64, MX-28, MX-64, MX-106, EX-106

################################
[plotting]
# PLOTTING LAYOUT
# Choose how plots display

##Plot layout specification:
#  A custom dictionary with keys starting from 0.  Each key
#  corresponds with a subplot specification.  Typically, these defines 
#  a 3-digit subplot value, where digits are (1) # columns; (2) # rows;
#  (3) plotnumber. plotnumber goes row by row, filling columns of each row.
#  See also:
#       http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.subplot
#
# Since we can't use Python dictionaries as parameters we specify an individual
# value for each plot.
# e.g.:
#       dict_subplot = { 0: 311, 1: 312, 2: 313 } # 3x1 subplots per plot
# becomes:
#       0 : 311
#       1 : 312
#       2 : 313
# More example dictionary specifications:
#  dict_subplot = { 0: 411, 1: 412, 2: 413, 3: 414 } # 4x1 subplots per plot
#  dict_subplot = { 0: 221, 1: 222, 2: 223, 3: 224 } # 2x2 subplots per plot
#
0 : 311
1 : 312
2 : 313

##########################
[timing]
# PACKET TIMING OPTIONS
# Choose whether to record time-of-arrival of packets

# If timing is true, times will be recorded and added at the end of each packet
# in the output log.
timing = True